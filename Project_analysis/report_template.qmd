---
title: "Data analysis"
author: "JSG"
format:
  html:
    toc: true
    toc_float: true
    keep_md: true
    self_contained: true
    toc_depth: 6
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```

**THIS TEMPLATE IS DESIGNED TO HELP GUIDE YOUR PROJECT DEVELOPMENT. YOU
CAN CHANGE OR ADD ANY SECTIONS (YOU SHOULDN'T DO EVERY ONE FOR A GIVEN
DATA SET!), BUT I NEED A BRIEF BACKGROUND (WHAT IS YOUR QUESTION, WHY,
WHAT DOES THE DATA LOOK LIKE?). THEN YOU NEED TO IMPORT THE DATA, CHECK
IT, PERFORM EDA, RUN AND INTERPRET TESTS, DEVELOP APPROPRIATE PLOTS, AND
THEN BRIEFLY SUMMARIZE YOUR FINDINGS.**

# Background and metadata

What is the main goal of your project? How did you collect the data? You
can copy this to/from a paper.

# Read in (Import) your data

Useful functions here may be **read.csv**.

# Check your data

Useful functions here may be **str**, **summary**, or **head**.

# Exploratory data analysis

Useful functions here may come from the **ggplot2** package.

# Run statistical tests

These are examples for different tests! You should only use the relevant
option; delete the rest.

## One sample tests

Options here include binomial tests (for discrete data) and z test, t
tests, and sign tests for continuous data. You can also use
bootstrapping.

## Two sample tests

Options here included /chi\^2 tests (for discrete data) and t tests,
Wilcoxon tests, and sign tests. You can also use bootstrapping and
permutation tests. Make sure to consider if your data are paired!

## Linear models

We will typically focus on linear models. The most useful function here
is **lm**; it covers most tests from classical statistics.

The assumptions for all linear models are that the residuals are
independently and identically distributed and follow a normal
distribution.

Once you create the **lm** object, check it for assumptions using
**plot(object)**. What you want to see

-   is no pattern in first graph (Residuals vs fitted)
    -   a pattern (like a funnel shape) means the residuals are
        increasing with the mean value, so you may need a transformation
-   the dots falling on the line in the second graph (the Normal Q-Q).
    this is a qq plot; if the lines fall along the line it means the
    normality assumption is ok
-   no outliers in the 4th plot (Residuals vs Leverage); this identifies
    plots that are high leverage (removing/including them really changes
    your results). you may want to check these.

Despite all this, lm's are very robust and are often used in ecology.

### ANOVA example (comparing numerical data from categories)

```{r}
#example of anova
sleep <- read.csv("https://raw.githubusercontent.com/jsgosnell/CUNY-BioStats/master/datasets/sleep.csv", stringsAsFactors = T)
sleep$Exposure <- factor(sleep$Exposure)
sleep_by_exposure_lm <- lm(Dreaming~Exposure, sleep)
plot(sleep_by_exposure_lm)
library(car)
Anova(sleep_by_exposure_lm, type = "III")
```

If you get a significant p-value and you have more than 2 levels, an
obvious question is which levels are different. Talk to me about
exploring this with

```{r}
library(multcomp)
comparison <- glht(sleep_by_exposure_lm, linfct = mcp(Exposure = "Tukey"))
summary(comparison)
```

### Regression example (looking for relationships among numerical data)

```{r}
#example of regression
dreaming_by_sleep_lm <- lm(Dreaming~TotalSleep, sleep)
plot(dreaming_by_sleep_lm)
Anova(dreaming_by_sleep_lm, type = "III")
#summary is good to get the coefficients
summary(dreaming_by_sleep_lm)
```

# Publication-quality graphs

ggplot2 is your friend here! Remember to add in labels for axes (with
units!), a good title, and pick the right graph type! Examples below for
a few common needs using the iris dataset

## ANOVA

You can plot raw data

```{r}
library(ggplot2)
ggplot(iris, aes(Species,Sepal.Length)) + 
  geom_point(aes(colour=Species), size = 3) +
  ylab("Sepal Length (cm)")+ggtitle("Sepal Length of various iris species")+
  theme(axis.title.x = element_text(face="bold", size=28), 
        axis.title.y = element_text(face="bold", size=28), 
        axis.text.y  = element_text(size=20),
        axis.text.x  = element_text(size=20), 
        legend.text =element_text(size=20),
        legend.title = element_text(size=20, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=32))
```

histogram

```{r}
ggplot(iris, aes(Sepal.Length)) + 
  geom_histogram(aes(fill=Species), size=3) +
  xlab("Sepal Length (cm)")+
  ylab("Frequency")+
  ggtitle("Sepal Length of various iris species")+
  theme(axis.title.x = element_text(face="bold", size=28), 
        axis.title.y = element_text(face="bold", size=28), 
        axis.text.y  = element_text(size=20),
        axis.text.x  = element_text(size=20), 
        legend.text =element_text(size=20),
        legend.title = element_text(size=20, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=32))
```

or group data

```{r}
library(Rmisc)
function_output <- summarySE(iris, measurevar="Sepal.Length", groupvars =
                               c("Species"))

ggplot(function_output, aes(x=Species, y=Sepal.Length)) +
  geom_col(aes(fill=Species), size = 3) +
  geom_errorbar(aes(ymin=Sepal.Length-ci, ymax=Sepal.Length+ci), size=1.5) +
  ylab("Sepal Length (cm)")+ggtitle("Sepal Length of various iris species")+
  theme(axis.title.x = element_text(face="bold", size=28), 
        axis.title.y = element_text(face="bold", size=28), 
        axis.text.y  = element_text(size=20),
        axis.text.x  = element_text(size=20), 
        legend.text =element_text(size=20),
        legend.title = element_text(size=20, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=32))
```

## Blocking/Factorial ANOVA

If you have 2 groups, you need to use color, shape, and/or another
aesthetic to note that

```{r}
memory <- read.table("http://www.statsci.org/data/general/eysenck.txt", header = T,
                     stringsAsFactors = T)
library(plyr)
memory$Age <- relevel(memory$Age, "Younger")
library(Rmisc)
function_output <- summarySE(memory, measurevar="Words", groupvars =
                               c("Age", "Process"), na.rm = T)
library(ggplot2)
ggplot(function_output, aes(x=Age, y=Words,color=Process, 
                                   shape = Process)) +
  geom_line(aes(group=Process, linetype = Process), size=2) +
    geom_point(size = 5) +
  ylab("Words remembered")+ 
  xlab("Age") + 
  ggtitle("Process type interacts with age to impact memory")+
  theme(axis.title.x = element_text(face="bold", size=28), 
        axis.title.y = element_text(face="bold", size=28), 
        axis.text.y  = element_text(size=20),
        axis.text.x  = element_text(size=20), 
        legend.text =element_text(size=20),
        legend.title = element_text(size=20, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=32))
```

## Regression

```{r}
library(ggplot2)
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
  geom_point(size = 3) +
  ylab("Sepal Length")+ggtitle("Sepal length increases with petal length")+
  theme(axis.title.x = element_text(face="bold", size=28), 
        axis.title.y = element_text(face="bold", size=28), 
        axis.text.y  = element_text(size=20),
        axis.text.x  = element_text(size=20), 
        legend.text =element_text(size=20),
        legend.title = element_text(size=20, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=32))+
  xlab("Petal length (cm)") +
  ylab("Sepal length (cm)")
```

# Brief discussion
